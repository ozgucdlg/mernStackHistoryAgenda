{"ast":null,"code":"import { FETCH_ALL, DELETE, CREATE, UPDATE } from '../constants/actionsConstants.js';\nimport * as api from '../axios/index';\nexport const fetchMemories = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchMemories();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const createMemory = memory => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createMemory(memory);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteMmeory = id => async dispatch => {\n  try {\n    await api.deleteMemory(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateMemory = (id, updatedMemory) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatedMemory(id, updatedMemory);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","DELETE","CREATE","UPDATE","api","fetchMemories","dispatch","data","type","payload","error","console","createMemory","memory","log","deleteMmeory","id","deleteMemory","updateMemory","updatedMemory"],"sources":["C:/Users/ozguc/react-workspace/mernStack/mernStackHistoryAgenda/client/src/actions/memoryActions.js"],"sourcesContent":["import { FETCH_ALL,DELETE,CREATE,UPDATE } from '../constants/actionsConstants.js';\r\n\r\nimport * as api from  '../axios/index'\r\n\r\nexport const fetchMemories = () => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.fetchMemories();\r\n        dispatch({type:FETCH_ALL,payload:data});\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n    }    \r\n}\r\n\r\nexport const createMemory = (memory) => async dispatch => {\r\n\r\n    try {\r\n        \r\n        const {data } = await api.createMemory(memory)\r\n        dispatch({ type:CREATE, payload: data})\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deleteMmeory = (id)=> async (dispatch) =>{\r\n\r\n    try {\r\n        await api.deleteMemory(id)\r\n        dispatch({ type:DELETE, payload: id})\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const updateMemory = (id, updatedMemory) =>async (dispatch)=>{\r\ntry {\r\n    const {data} =await api.updatedMemory(id,updatedMemory)\r\n    dispatch({type:UPDATE, payload :data})\r\n} catch (error) {\r\n    console.log(error);\r\n    \r\n}\r\n\r\n}\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,SAAS,EAACC,MAAM,EAACC,MAAM,EAACC,MAAM,QAAQ,kCAAkC;AAEjF,OAAO,KAAKC,GAAG,MAAO,gBAAgB;AAEtC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACnD,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMH,GAAG,CAACC,aAAa,CAAC,CAAC;IACxCC,QAAQ,CAAC;MAACE,IAAI,EAACR,SAAS;MAACS,OAAO,EAACF;IAAI,CAAC,CAAC;EAE3C,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB;AACJ,CAAC;AAED,OAAO,MAAME,YAAY,GAAIC,MAAM,IAAK,MAAMP,QAAQ,IAAI;EAEtD,IAAI;IAEA,MAAM;MAACC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACQ,YAAY,CAACC,MAAM,CAAC;IAC9CP,QAAQ,CAAC;MAAEE,IAAI,EAACN,MAAM;MAAEO,OAAO,EAAEF;IAAI,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACG,GAAG,CAACJ,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMK,YAAY,GAAIC,EAAE,IAAI,MAAOV,QAAQ,IAAI;EAElD,IAAI;IACA,MAAMF,GAAG,CAACa,YAAY,CAACD,EAAE,CAAC;IAC1BV,QAAQ,CAAC;MAAEE,IAAI,EAACP,MAAM;MAAEQ,OAAO,EAAEO;IAAE,CAAC,CAAC;EAEzC,CAAC,CAAC,OAAON,KAAK,EAAE;IACZC,OAAO,CAACG,GAAG,CAACJ,KAAK,CAAC;EAEtB;AACJ,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAGA,CAACF,EAAE,EAAEG,aAAa,KAAI,MAAOb,QAAQ,IAAG;EACpE,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAE,MAAMH,GAAG,CAACe,aAAa,CAACH,EAAE,EAACG,aAAa,CAAC;IACvDb,QAAQ,CAAC;MAACE,IAAI,EAACL,MAAM;MAAEM,OAAO,EAAEF;IAAI,CAAC,CAAC;EAC1C,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZC,OAAO,CAACG,GAAG,CAACJ,KAAK,CAAC;EAEtB;AAEA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}